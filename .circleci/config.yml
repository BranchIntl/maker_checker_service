version: 2.1
executors:
  build_machine:
    machine:
      image: ubuntu-2004:2024.01.1
      docker_layer_caching: true
    resource_class: arm.medium

orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
  kubernetes: circleci/kubernetes@0.10.0
  aws-cli: circleci/aws-cli@5.1.1
  docker: circleci/docker@1.4.0
  slack: circleci/slack@4.1.1

parameters:
  generate_repo:
    type: string
    default: ""

default_environment: &default_environment
  working_directory: ~/project
  docker:
    - image: $AWS_ECR_MUMBAI_ACCOUNT_URL/$PRIVATE_GEM_BASE_IMAGE_PATH
      aws_auth:
          oidc_role_arn: $AWS_ROLE
      environment:
        BUNDLE_JOBS: 4
        BUNDLE_PATH: vendor/bundle
        BUNDLE_RETRY: 3
        BUNDLE_WITHOUT: development:staging:production
        BUNDLE_WITH: test
        DB_HOST: localhost
        PGHOST: 127.0.0.1
        RAILS_ENV: test
        DATABASE_NAME: test
        REDIS_HOST: 127.0.0.1
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
        RUBY_YJIT_ENABLE: 1
        BUNDLER_VERSION: 2.5.10 # Hardcoded because Gemfile.lock is not committed to the repo for libraries.
    - image: cimg/postgres:14.4
      environment:
        POSTGRES_DB: test
        POSTGRES_PASSWORD: ""
        POSTGRES_USER: circleci
    - image: redis

jobs:
  build:
    <<: *default_environment
    steps:
      - checkout
      - run:
          name: Copy file for checksum
          command: |
            cp Gemfile checksum-file
      - restore_cache:
          keys:
            - build-002-{{ checksum "checksum-file" }}
      - run:
          name: Install bundler
          command: |
            gem install bundler:$BUNDLER_VERSION rake-compiler
      - run:
          name: Install dependencies
          command: ./bin/bundle install
      - run:
          name: Schema.rb/structure.sql update
          command: |
            # This is purely to update the schema.rb or structure.sql file. The
            # tables in the database are not preserved to subsequent steps in
            # the CircleCI workflow.
            ./bin/bundle exec rails db:create
            ./bin/bundle exec rails db:migrate
      - save_cache:
          key: build-002-{{ checksum "checksum-file" }}
          paths:
            - vendor/bundle
            - Gemfile.lock
      - run:
          name: Setup npm github access token
          command: git config --global url."https://$BUNDLE_GITHUB__COM@github.com/".insteadOf ssh://git@github.com/
      - run:
          name: Run checks
          command: ./bin/check
      - store_artifacts:
          path: lint
  test:
    <<: *default_environment
    parallelism: 6 # Can be increased to 6 as the number of tests increases. Note that if there are fewer test files than the number of parallelism, some will be run multiple times.
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          keys:
            - build-002-{{ checksum "Gemfile" }}
      - run:
          # Bundler does not get saved in the cache since it's installed at
          # /usr/local/bin in the circle ci image, so it has to be re-installed.
          name: Install bundler
          command: |
            gem install bundler:$BUNDLER_VERSION rake-compiler
      - run: mkdir -p /tmp/test-results/rspec
      # When profiling tests, set RUBYOPT=-W2
      - run:
          name: Parallel RSpec
          command: |
            # Determine Redis database index (1 to 6) based on CIRCLE_NODE_INDEX
            REDIS_DB_INDEX=$(expr $CIRCLE_NODE_INDEX + 1)
            export REDIS_DB_INDEX

            if [[ -n $(circleci tests glob "spec/**/*spec.rb" "extensions/**/spec/**/*spec.rb") ]]; then
              TESTFILES=$(circleci tests glob "spec/**/*spec.rb" "extensions/**/spec/**/*spec.rb" | circleci tests split --split-by=timings)
              RUBYOPT=-W0 ./bin/rspec ${TESTFILES} --color -f p -f RspecJunitFormatter -o /tmp/test-results/rspec/results.xml
            fi
      # Save test results for timing analysis
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/ruby-warnings.txt
      - store_artifacts:
          path: coverage
  make_release_if_needed:
    <<: *default_environment
    steps:
      - checkout
      - restore_cache:
          keys:
            - build-002-{{ checksum "Gemfile" }}
      - run:
          # Bundler does not get saved in the cache since it's installed at
          # /usr/local/bin in the circle ci image, so it has to be re-installed.
          name: Install bundler
          command: |
            gem install bundler:$BUNDLER_VERSION rake-compiler
      - run:
          name: Make release if needed
          command: ./.github/scripts/make_release_if_needed
  generate_repo:
    <<: *default_environment
    steps:
      - checkout
      - run:
          name: Generate repo
          command: ./.github/scripts/generate_repo "<< pipeline.parameters.generate_repo >>"

workflows:
  version: 2
  build_and_test:
    unless: "<< pipeline.parameters.generate_repo >>"
    jobs:
      - build:
          context:
           - BranchIntl
           - PrivateGem
      - test:
          context:
           - BranchIntl
           - PrivateGem
          requires:
            - build
      - make_release_if_needed:
          context:
           - BranchIntl
           - PrivateGem
          requires:
            - test
          filters:
            branches:
              only:
                - main
  generate_repo:
    when: "<< pipeline.parameters.generate_repo >>"
    jobs:
      - generate_repo:
          context:
           - BranchIntl
           - PrivateGem
